---
import type { Category } from "../utils/types";
import type { Platform } from "../utils/types";
import { getPlatforms } from "../api";
import { getCategories } from "../api";

const { params } = Astro.props;
console.log(params);
const rawCategories = await getCategories();
const categories: Category[] = rawCategories.results.filter(
  (category: Category) => category.parent === null
);

const rawPlatforms = await getPlatforms();
const platforms: Platform[] = rawPlatforms.results;
---

<form action="" class="border-b border-gray-200 mb-3">
  <h1 class="text-2xl font-bold text-black">Listado de productos</h1>

  <div
    class="flex flex-col md:flex-row items-start justify-between gap-2 w-full py-6 rounded border-gray-200"
  >
    <div class="w-full">
      <label for="name" class="block mb-2 text-sm font-medium text-gray-900"
        >Nombre del producto</label
      >
      <input
        type="text"
        id="name"
        name="name"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
        placeholder="Red Dead Redemption"
        value={params?.name}
      />
    </div>
    <div class="w-full">
      <label for="category" class="block mb-2 text-sm font-medium text-gray-900"
        >Selecciona Categoría</label
      >
      <select
        name="category"
        id="category"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
      >
        <option value="">Cualquiera</option>
        {
          categories.map((category: Category) => (
            <option
              selected={category.id == params.categoryParent && "selected"}
              value={category.id}
            >
              {category.name}s
            </option>
          ))
        }
      </select>
    </div>
    <div class="w-full">
      <label
        for="subcategory"
        class="block mb-2 text-sm font-medium text-gray-900"
        >Selecciona Subcategoría</label
      >
      <select
        name="subcategory"
        id="subcategory"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
      >
        <option value="">Todas</option>
        {
          categories.map((category: Category) => (
            <optgroup label={category.name}>
              {category.subcategories.map((subcategory: Category) => (
                <option
                  selected={subcategory.id == params.category && "selected"}
                  value={subcategory.id}
                >
                  {subcategory.name}
                </option>
              ))}
            </optgroup>
          ))
        }
      </select>
    </div>
    <div class="w-full">
      <label for="platform" class="block mb-2 text-sm font-medium text-gray-900"
        >Plataforma</label
      >
      <select
        id="platform"
        name="platform"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
      >
        <option value="" selected>Cualquiera</option>
        {
          platforms.map((platform: Platform) => (
            <option
              selected={platform.id == params.platform && "selected"}
              value={platform.id}
            >
              {platform.name}
            </option>
          ))
        }
      </select>
    </div>
    <div class="self-end">
      <button
        class="w-full px-6 py-2 bg-blue-700 hover:bg-blue-800 text-white rounded-md"
        type="submit">Buscar</button
      >
    </div>
  </div>
</form>
